{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a176620e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "3/3 - 4s - loss: 0.2162 - 4s/epoch - 1s/step\n",
      "Epoch 2/50\n",
      "3/3 - 0s - loss: 0.1454 - 40ms/epoch - 13ms/step\n",
      "Epoch 3/50\n",
      "3/3 - 0s - loss: 0.0925 - 49ms/epoch - 16ms/step\n",
      "Epoch 4/50\n",
      "3/3 - 0s - loss: 0.0491 - 35ms/epoch - 12ms/step\n",
      "Epoch 5/50\n",
      "3/3 - 0s - loss: 0.0188 - 36ms/epoch - 12ms/step\n",
      "Epoch 6/50\n",
      "3/3 - 0s - loss: 0.0037 - 36ms/epoch - 12ms/step\n",
      "Epoch 7/50\n",
      "3/3 - 0s - loss: 0.0048 - 32ms/epoch - 11ms/step\n",
      "Epoch 8/50\n",
      "3/3 - 0s - loss: 0.0124 - 38ms/epoch - 13ms/step\n",
      "Epoch 9/50\n",
      "3/3 - 0s - loss: 0.0127 - 30ms/epoch - 10ms/step\n",
      "Epoch 10/50\n",
      "3/3 - 0s - loss: 0.0069 - 34ms/epoch - 11ms/step\n",
      "Epoch 11/50\n",
      "3/3 - 0s - loss: 0.0026 - 31ms/epoch - 10ms/step\n",
      "Epoch 12/50\n",
      "3/3 - 0s - loss: 0.0014 - 37ms/epoch - 12ms/step\n",
      "Epoch 13/50\n",
      "3/3 - 0s - loss: 0.0024 - 28ms/epoch - 9ms/step\n",
      "Epoch 14/50\n",
      "3/3 - 0s - loss: 0.0033 - 33ms/epoch - 11ms/step\n",
      "Epoch 15/50\n",
      "3/3 - 0s - loss: 0.0034 - 30ms/epoch - 10ms/step\n",
      "Epoch 16/50\n",
      "3/3 - 0s - loss: 0.0028 - 29ms/epoch - 10ms/step\n",
      "Epoch 17/50\n",
      "3/3 - 0s - loss: 0.0018 - 29ms/epoch - 10ms/step\n",
      "Epoch 18/50\n",
      "3/3 - 0s - loss: 0.0011 - 24ms/epoch - 8ms/step\n",
      "Epoch 19/50\n",
      "3/3 - 0s - loss: 8.7955e-04 - 29ms/epoch - 10ms/step\n",
      "Epoch 20/50\n",
      "3/3 - 0s - loss: 9.2845e-04 - 25ms/epoch - 8ms/step\n",
      "Epoch 21/50\n",
      "3/3 - 0s - loss: 9.1452e-04 - 25ms/epoch - 8ms/step\n",
      "Epoch 22/50\n",
      "3/3 - 0s - loss: 7.6372e-04 - 31ms/epoch - 10ms/step\n",
      "Epoch 23/50\n",
      "3/3 - 0s - loss: 5.7974e-04 - 32ms/epoch - 11ms/step\n",
      "Epoch 24/50\n",
      "3/3 - 0s - loss: 4.8098e-04 - 31ms/epoch - 10ms/step\n",
      "Epoch 25/50\n",
      "3/3 - 0s - loss: 4.4869e-04 - 32ms/epoch - 11ms/step\n",
      "Epoch 26/50\n",
      "3/3 - 0s - loss: 4.1173e-04 - 37ms/epoch - 12ms/step\n",
      "Epoch 27/50\n",
      "3/3 - 0s - loss: 3.3692e-04 - 24ms/epoch - 8ms/step\n",
      "Epoch 28/50\n",
      "3/3 - 0s - loss: 2.6869e-04 - 35ms/epoch - 12ms/step\n",
      "Epoch 29/50\n",
      "3/3 - 0s - loss: 2.2023e-04 - 33ms/epoch - 11ms/step\n",
      "Epoch 30/50\n",
      "3/3 - 0s - loss: 1.8869e-04 - 34ms/epoch - 11ms/step\n",
      "Epoch 31/50\n",
      "3/3 - 0s - loss: 1.6024e-04 - 38ms/epoch - 13ms/step\n",
      "Epoch 32/50\n",
      "3/3 - 0s - loss: 1.3403e-04 - 32ms/epoch - 11ms/step\n",
      "Epoch 33/50\n",
      "3/3 - 0s - loss: 1.1025e-04 - 31ms/epoch - 10ms/step\n",
      "Epoch 34/50\n",
      "3/3 - 0s - loss: 8.8762e-05 - 40ms/epoch - 13ms/step\n",
      "Epoch 35/50\n",
      "3/3 - 0s - loss: 7.3333e-05 - 34ms/epoch - 11ms/step\n",
      "Epoch 36/50\n",
      "3/3 - 0s - loss: 5.9769e-05 - 33ms/epoch - 11ms/step\n",
      "Epoch 37/50\n",
      "3/3 - 0s - loss: 4.8951e-05 - 27ms/epoch - 9ms/step\n",
      "Epoch 38/50\n",
      "3/3 - 0s - loss: 3.9835e-05 - 31ms/epoch - 10ms/step\n",
      "Epoch 39/50\n",
      "3/3 - 0s - loss: 3.2967e-05 - 34ms/epoch - 11ms/step\n",
      "Epoch 40/50\n",
      "3/3 - 0s - loss: 2.7419e-05 - 42ms/epoch - 14ms/step\n",
      "Epoch 41/50\n",
      "3/3 - 0s - loss: 2.3263e-05 - 33ms/epoch - 11ms/step\n",
      "Epoch 42/50\n",
      "3/3 - 0s - loss: 1.9844e-05 - 36ms/epoch - 12ms/step\n",
      "Epoch 43/50\n",
      "3/3 - 0s - loss: 1.7424e-05 - 32ms/epoch - 11ms/step\n",
      "Epoch 44/50\n",
      "3/3 - 0s - loss: 1.5629e-05 - 34ms/epoch - 11ms/step\n",
      "Epoch 45/50\n",
      "3/3 - 0s - loss: 1.3949e-05 - 39ms/epoch - 13ms/step\n",
      "Epoch 46/50\n",
      "3/3 - 0s - loss: 1.2719e-05 - 36ms/epoch - 12ms/step\n",
      "Epoch 47/50\n",
      "3/3 - 0s - loss: 1.1857e-05 - 32ms/epoch - 11ms/step\n",
      "Epoch 48/50\n",
      "3/3 - 0s - loss: 1.1121e-05 - 34ms/epoch - 11ms/step\n",
      "Epoch 49/50\n",
      "3/3 - 0s - loss: 1.0736e-05 - 40ms/epoch - 13ms/step\n",
      "Epoch 50/50\n",
      "3/3 - 0s - loss: 1.0345e-05 - 33ms/epoch - 11ms/step\n",
      "3/3 [==============================] - 1s 10ms/step\n",
      "1/1 [==============================] - 0s 42ms/step\n",
      "Root Mean Squared Error (RMSE): 6.126612701902505\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from keras.models import Sequential\n",
    "from keras.layers import LSTM, Dense\n",
    "\n",
    "# Generate synthetic Netflix stock price data\n",
    "np.random.seed(0)\n",
    "dates = pd.date_range(start=\"2022-01-01\", periods=100, freq=\"D\")\n",
    "prices = np.cumsum(np.random.randn(100) + 5)\n",
    "\n",
    "data = pd.DataFrame({'Date': dates, 'Close': prices})\n",
    "\n",
    "# Extract the 'Close' prices and convert them to numpy array\n",
    "prices = data['Close'].values.reshape(-1, 1)\n",
    "\n",
    "# Normalize the data to the range [0, 1]\n",
    "scaler = MinMaxScaler()\n",
    "prices_scaled = scaler.fit_transform(prices)\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "train_size = int(len(prices_scaled) * 0.80)\n",
    "test_size = len(prices_scaled) - train_size\n",
    "train_data, test_data = prices_scaled[0:train_size], prices_scaled[train_size:]\n",
    "\n",
    "# Create sequences for training and testing\n",
    "def create_sequences(data, seq_length):\n",
    "    X, y = [], []\n",
    "    for i in range(len(data) - seq_length):\n",
    "        X.append(data[i:i+seq_length])\n",
    "        y.append(data[i+seq_length])\n",
    "    return np.array(X), np.array(y)\n",
    "\n",
    "seq_length = 10  # Adjust this for your preference\n",
    "X_train, y_train = create_sequences(train_data, seq_length)\n",
    "X_test, y_test = create_sequences(test_data, seq_length)\n",
    "\n",
    "# Build an LSTM model\n",
    "model = Sequential()\n",
    "model.add(LSTM(50, input_shape=(X_train.shape[1], X_train.shape[2])))\n",
    "model.add(Dense(1))\n",
    "model.compile(loss='mean_squared_error', optimizer='adam')\n",
    "\n",
    "# Train the model\n",
    "model.fit(X_train, y_train, epochs=50, batch_size=32, verbose=2)\n",
    "\n",
    "# Make predictions\n",
    "train_predict = model.predict(X_train)\n",
    "test_predict = model.predict(X_test)\n",
    "\n",
    "# Inverse transform the predictions to get real stock prices\n",
    "train_predict = scaler.inverse_transform(train_predict)\n",
    "y_train = scaler.inverse_transform(y_train)\n",
    "test_predict = scaler.inverse_transform(test_predict)\n",
    "y_test = scaler.inverse_transform(y_test)\n",
    "\n",
    "# Calculate RMSE (Root Mean Squared Error) on the test set\n",
    "rmse = np.sqrt(mean_squared_error(y_test, test_predict))\n",
    "print(\"Root Mean Squared Error (RMSE):\", rmse)\n",
    "\n",
    "# Plot the actual vs. predicted stock prices\n",
    "plt.figure(figsize=(14, 6))\n",
    "plt.title('Netflix Stock Price Prediction')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Close Price')\n",
    "plt.plot(data['Date'][-len(y_test):], y_test, label='Actual Prices', color='blue')\n",
    "plt.plot(data['Date'][-len(y_test):], test_predict, label='Predicted Prices', color='red')\n",
    "plt.legend()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ae27381",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
